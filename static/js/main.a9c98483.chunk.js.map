{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","value","inputText","onChange","e","setInput","target","type","className","onClick","preventDefault","length","window","alert","setTodos","todos","text","completed","id","Math","random","setStatus","name","Todo","todo","map","filter","TodoList","filteredTodos","App","useState","status","setFilterTodos","useEffect","localStorage","getItem","setItem","JSON","stringify","localStore","parse","getFromLocal","filterHandler","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9c98483.chunk.js","sourcesContent":["import React,{useState}from \"react\"\r\nconst Form = (props) => {\r\n    const InputHandler=(e) =>{\r\n      props.setInput(e.target.value)\r\n    }\r\n    const clickHandler=(e) =>{\r\n        e.preventDefault()\r\n        if(props.inputText.length===0)\r\n        {\r\n          window.alert(\"Opps!!! invalid task....\")\r\n        }\r\n        else{\r\n          props.setTodos([\r\n            ...props.todos,{text:props.inputText,completed:false,id: Math.random()*100}\r\n        ])\r\n        props.setInput(\" \")\r\n        }\r\n    }\r\n    const statusHandler=(e)=>{\r\n        props.setStatus(e.target.value)\r\n    }\r\n    return(\r\n        <form>\r\n      <input value={props.inputText} onChange={InputHandler}type=\"text\" className=\"todo-input\" />\r\n      <button onClick={clickHandler}className=\"todo-button\" type=\"submit\">\r\n        <i className=\"fas fa-plus-square\"></i>\r\n      </button>\r\n      <div className=\"select\">\r\n        <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n          <option value=\"all\">All</option>\r\n          <option value=\"completed\">Completed</option>\r\n          <option value=\"uncompleted\">Uncompleted</option>\r\n        </select>\r\n      </div>\r\n    </form>\r\n    )\r\n}\r\nexport default Form","import React from \"react\"\r\nconst Todo = (props)=> {\r\n    const deleteHandler=()=>{\r\n        props.setTodos(props.todos.filter(e =>e.id!==props.todo.id))\r\n    }\r\n    const completeHandler=()=>{\r\n        props.setTodos(props.todos.map((e)=>{\r\n            if(e.id===props.todo.id){\r\n                return{\r\n                    ...e,completed:!e.completed\r\n                }\r\n            }\r\n            return e\r\n        }))\r\n    }\r\n    return(\r\n        <div className=\"todo\">\r\n            <li className={`todo-item ${props.todo.completed? \"completed\":\"\"}`}>{props.text}</li>\r\n            <button onClick={completeHandler} className=\"complete-btn\">\r\n                <i className=\"fas fa-check\"></i>\r\n            </button>\r\n            <button onClick={deleteHandler} className=\"trash-btn\">\r\n                <i className=\"fas fa-trash\"></i>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\nexport default Todo","import React from \"react\"\r\nimport Todo from \"./Todo.js\"\r\nconst TodoList = (props) =>{\r\n    return(\r\n    <div className=\"todo-container\">\r\n      <ul className=\"todo-list\">\r\n          {props.filteredTodos.map((todo) =>(\r\n              <Todo text={todo.text} key={todo.id} todos={props.todos} setTodos={props.setTodos} todo={todo}/>\r\n          ))}\r\n      </ul>\r\n    </div>\r\n    )\r\n}\r\nexport default TodoList","import './App.css';\nimport React,{useState,useEffect} from \"react\"\nimport Form from \"./components/Form.js\"\nimport TodoList from \"./components/TodoList.js\"\nfunction App() {\n  const [inputText,setInput]=useState(\"\");\n  const [todos,setTodos]=useState([]);\n  const [status,setStatus]=useState(\"all\")\n  const [filteredTodos,setFilterTodos]=useState([])\n  const filterHandler=()=>{\n    switch(status){\n      case \"completed\": setFilterTodos(todos.filter(todo =>todo.completed===true))\n      break\n      case \"uncompleted\" : setFilterTodos(todos.filter(todo=>todo.completed===false))\n      break\n      default : setFilterTodos(todos)\n      break\n    }\n  }\n  const saveToLocal=()=>{\n    localStorage.setItem(\"todos\",JSON.stringify(todos))\n  }\n  const getFromLocal=()=>{\n    if(localStorage.getItem(\"todos\")===null){\n      localStorage.setItem(\"todos\",JSON.stringify(\"[]\"))\n    }\n    else{\n      const localStore=JSON.parse(localStorage.getItem(\"todos\"))\n      setTodos(localStore)\n    }\n  }\n  useEffect(()=>{\n    getFromLocal()\n  },[])\n  useEffect(()=>{\n    filterHandler()\n    saveToLocal()\n  },[todos,status])\n  return (\n    <div className=\"App\">\n      <header>\n        My To-Do List\n      </header>\n      <Form inputText={inputText} setInput={setInput} todos={todos} setTodos={setTodos} setStatus={setStatus} status={status}/>\n      <TodoList todos={todos} todos={todos} setTodos={setTodos} filteredTodos={filteredTodos}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}